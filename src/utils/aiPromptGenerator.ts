
export interface WeatherContext {
  city: string
  temp: number
  description: string
  humidity: number
  windSpeed: number
  pressure: number
  icon: string
  timeOfDay?: 'morning' | 'day' | 'evening' | 'night'
}

export interface ForecastContext {
  forecast?: Array<{
    dayLabel: string
    min: number
    max: number
    desc: string
  }>
}

export class AIPromptGenerator {

  static generateWeatherAdvicePrompt(
    weather: WeatherContext,
    forecast?: ForecastContext
  ): string {
    const { city, temp, description, humidity, windSpeed } = weather
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –≤—Ä–µ–º—è —Å—É—Ç–æ–∫ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏
    const hour = new Date().getHours()
    const timeOfDay = this.getTimeOfDay(hour)
    
    // –§–æ—Ä–º–∏—Ä—É–µ–º –±–∞–∑–æ–≤—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
    const tempDescription = this.getTemperatureDescription(temp)
    const weatherCondition = this.translateWeatherDescription(description)
    const windCondition = this.getWindDescription(windSpeed)
    const humidityCondition = this.getHumidityDescription(humidity)
    
    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≥–Ω–æ–∑ –µ—Å–ª–∏ –µ—Å—Ç—å
    const forecastInfo = forecast?.forecast?.length 
      ? this.getForecastSummary(forecast.forecast.slice(0, 2))
      : ''
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ—Ä–æ—Ç–∫–∏–π –ø—Ä–æ–º–ø—Ç (‚â§40 —Å–ª–æ–≤)
    const prompt = [
      `Weather advice for ${city}:`,
      `${tempDescription} ${temp}¬∞C,`,
      `${weatherCondition},`,
      windCondition ? `${windCondition},` : '',
      humidityCondition ? `${humidityCondition},` : '',
      `${timeOfDay}.`,
      forecastInfo,
      'Give brief personal advice (clothing, activities, health tips). Answer in Russian.'
    ].filter(Boolean).join(' ')
    
    // –û–±—Ä–µ–∑–∞–µ–º –¥–æ 40 —Å–ª–æ–≤ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    return this.truncateToWordLimit(prompt, 40)
  }

  //–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≥–æ—Ä–æ–¥–æ–≤
  static generateComparisonPrompt(
    currentWeather: WeatherContext,
    ...otherCities: WeatherContext[]
  ): string {
    const cities = [currentWeather, ...otherCities].slice(0, 3) // –ú–∞–∫—Å–∏–º—É–º 3 –≥–æ—Ä–æ–¥–∞
    
    const comparisons = cities.map(w => 
      `${w.city}: ${w.temp}¬∞C, ${this.translateWeatherDescription(w.description)}`
    ).join('; ')
    
    const prompt = `Compare weather: ${comparisons}. Best choice for outdoor activities? Russian please.`
    
    return this.truncateToWordLimit(prompt, 35)
  }

   //–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø—Ä–æ–º–ø—Ç –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
  static generateActivityPrompt(
    weather: WeatherContext,
    activity: string
  ): string {
    const { temp, description, windSpeed, humidity } = weather
    const weatherCondition = this.translateWeatherDescription(description)
    
    const prompt = `Weather for ${activity}: ${temp}¬∞C, ${weatherCondition}, wind ${windSpeed}m/s, humidity ${humidity}%. Is it suitable? Tips in Russian.`
    
    return this.truncateToWordLimit(prompt, 35)
  }

   //–û–ø—Ä–µ–¥–µ–ª—è–µ—Ç –≤—Ä–µ–º—è —Å—É—Ç–æ–∫
  private static getTimeOfDay(hour: number): string {
    if (hour >= 6 && hour < 12) return 'morning'
    if (hour >= 12 && hour < 18) return 'afternoon'
    if (hour >= 18 && hour < 22) return 'evening'
    return 'night'
  }

  //–æ–ø–∏—Å–∞–Ω–∏–µ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
  private static getTemperatureDescription(temp: number): string {
    if (temp < -10) return 'Very cold'
    if (temp < 0) return 'Cold'
    if (temp < 10) return 'Cool'
    if (temp < 20) return 'Mild'
    if (temp < 30) return 'Warm'
    return 'Hot'
  }
  
   //–ø–µ—Ä–µ–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞ –∞–Ω–≥–ª–∏–π—Å–∫–∏–π
  private static translateWeatherDescription(desc: string): string {
    const translations: Record<string, string> = {
      '—è—Å–Ω–æ': 'clear',
      '—Å–æ–ª–Ω–µ—á–Ω–æ': 'sunny',
      '–æ–±–ª–∞—á–Ω–æ': 'cloudy',
      '–ø–∞—Å–º—É—Ä–Ω–æ': 'overcast',
      '–¥–æ–∂–¥—å': 'rain',
      '—Å–Ω–µ–≥': 'snow',
      '—Ç—É–º–∞–Ω': 'fog',
      '–≥—Ä–æ–∑–∞': 'thunderstorm',
      '–≤–µ—Ç—Ä–µ–Ω–æ': 'windy'
    }
    
    const lowerDesc = desc.toLowerCase()
    for (const [ru, en] of Object.entries(translations)) {
      if (lowerDesc.includes(ru)) return en
    }
    
    // –ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
    return desc.length > 15 ? desc.substring(0, 15) : desc
  }
  
   //–æ–ø–∏—Å–∞–Ω–∏–µ –≤–µ—Ç—Ä–∞
  private static getWindDescription(windSpeed: number): string {
    if (windSpeed < 2) return ''
    if (windSpeed < 5) return 'light breeze'
    if (windSpeed < 10) return 'moderate wind'
    return 'strong wind'
  }

   //–æ–ø–∏—Å–∞–Ω–∏–µ –≤–ª–∞–∂–Ω–æ—Å—Ç–∏
  private static getHumidityDescription(humidity: number): string {
    if (humidity < 30) return 'dry air'
    if (humidity > 80) return 'high humidity'
    return ''
  }

   //–∫—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞
  private static getForecastSummary(forecast: Array<{ dayLabel: string; min: number; max: number; desc: string }>): string {
    if (!forecast.length) return ''
    
    const tomorrow = forecast[0]
    if (tomorrow) {
      return `Tomorrow: ${tomorrow.min}-${tomorrow.max}¬∞C.`
    }
    return ''
  }

   //–æ–±—Ä–µ–∑–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–æ —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —Å–ª–æ–≤
  private static truncateToWordLimit(text: string, maxWords: number): string {
    const words = text.split(/\s+/)
    if (words.length <= maxWords) return text
    
    return words.slice(0, maxWords).join(' ') + '...'
  }

   //–ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —à–∞–±–ª–æ–Ω—ã –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Å–∏—Ç—É–∞—Ü–∏–π
  static getQuickPrompts(weather: WeatherContext): Array<{
    title: string
    prompt: string
    icon: string
  }> {
    return [
      {
        title: '–û–±—â–∏–µ —Å–æ–≤–µ—Ç—ã',
        prompt: AIPromptGenerator.generateWeatherAdvicePrompt(weather),
        icon: 'üí°'
      },
      {
        title: '–û–¥–µ–∂–¥–∞',
        prompt: `What to wear today? ${weather.temp}¬∞C, ${weather.description}. Clothing advice in Russian.`,
        icon: 'üëî'
      },
      {
        title: '–ê–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
        prompt: `Best activities for ${weather.temp}¬∞C ${weather.description} weather? Russian tips.`,
        icon: 'üèÉ‚Äç‚ôÇÔ∏è'
      },
      {
        title: '–ó–¥–æ—Ä–æ–≤—å–µ',
        prompt: `Health tips for ${weather.temp}¬∞C, humidity ${weather.humidity}%, ${weather.description}? Russian advice.`,
        icon: 'üè•'
      }
    ]
  }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞
export const generateWeatherAdvice = AIPromptGenerator.generateWeatherAdvicePrompt
export const generateActivityAdvice = AIPromptGenerator.generateActivityPrompt
export const getQuickPrompts = AIPromptGenerator.getQuickPrompts
