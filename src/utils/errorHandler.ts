import type { AxiosError, ErrorDetails, ErrorContext } from '@/types/errors'

//—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
//—É–Ω–∏—Ñ–∏—Ü–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–µ—Ç–µ–≤—ã—Ö –æ—à–∏–±–æ–∫, –ª–∏–º–∏—Ç–æ–≤ API, 404 –∏ –¥—Ä—É–≥–∏—Ö –∏—Å–∫–ª—é—á–µ–Ω–∏–π

export class ErrorHandler {
    private static instance: ErrorHandler
    private errorLog: Array<ErrorDetails & ErrorContext> = []

    static getInstance(): ErrorHandler {
        if (!ErrorHandler.instance) {
            ErrorHandler.instance = new ErrorHandler()
        }
        return ErrorHandler.instance
    }

    //–æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ª—é–±—ã—Ö –æ—à–∏–±–æ–∫
    handle(error: unknown, context: ErrorContext): ErrorDetails {
        const errorDetails = this.parseError(error, context)

        // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É
        this.logError(errorDetails, context)

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
        this.processError(errorDetails, context)

        return errorDetails
    }

    //–ø–∞—Ä—Å–∏–Ω–≥ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫ –≤ —É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    private parseError(error: unknown, context: ErrorContext): ErrorDetails {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å - –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        if (this.isCancelledRequest(error)) {
            return {
                type: 'unknown',
                code: 'CANCELLED',
                message: 'Request was cancelled',
                userMessage: '',
                canRetry: false,
                severity: 'low'
            }
        }

        const axiosError = error as AxiosError

        // –°–µ—Ç–µ–≤—ã–µ –æ—à–∏–±–∫–∏
        if (axiosError?.code === 'ERR_NETWORK') {
            return {
                type: 'network',
                code: 'ERR_NETWORK',
                message: 'Network connection failed',
                userMessage: 'üåê –ü—Ä–æ–±–ª–µ–º—ã —Å –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.',
                canRetry: true,
                severity: 'medium'
            }
        }

        // –¢–∞–π–º–∞—É—Ç—ã
        if (axiosError?.code === 'ECONNABORTED' || axiosError?.code === 'ERR_TIMEOUT') {
            return {
                type: 'timeout',
                code: axiosError.code,
                message: 'Request timeout',
                userMessage: '‚è±Ô∏è –ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è. –°–µ—Ä–≤–µ—Ä –æ—Ç–≤–µ—á–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥.',
                canRetry: true,
                severity: 'medium'
            }
        }

        // HTTP —Å—Ç–∞—Ç—É—Å –∫–æ–¥—ã
        if (axiosError?.response?.status) {
            return this.parseHttpError(axiosError.response.status, context)
        }

        // –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞
        return {
            type: 'unknown',
            code: 'UNKNOWN',
            message: error instanceof Error ? error.message : 'Unknown error',
            userMessage: this.getGenericErrorMessage(context.operation),
            canRetry: false,
            severity: 'medium'
        }
    }

    //–æ–±—Ä–∞–±–æ—Ç–∫–∞ HTTP –æ—à–∏–±–æ–∫ –ø–æ —Å—Ç–∞—Ç—É—Å –∫–æ–¥–∞–º
    private parseHttpError(status: number, context: ErrorContext): ErrorDetails {
        switch (status) {
            case 400:
                return {
                    type: 'config',
                    code: 400,
                    message: 'Bad Request',
                    userMessage: '‚ùå –û—à–∏–±–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á OpenWeatherMap –≤ —Ñ–∞–π–ª–µ .env.local',
                    canRetry: false,
                    severity: 'high'
                }

            case 401:
                return {
                    type: 'auth',
                    code: 401,
                    message: 'Unauthorized',
                    userMessage: 'üîë –ü—Ä–æ–±–ª–µ–º–∞ —Å –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–µ—Ä–≤–∏—Å—É. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.',
                    canRetry: false,
                    severity: 'high'
                }

            case 403:
                return {
                    type: 'auth',
                    code: 403,
                    message: 'Forbidden',
                    userMessage: 'üö´ –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞.',
                    canRetry: false,
                    severity: 'high'
                }

            case 404:
                return {
                    type: 'notfound',
                    code: 404,
                    message: 'Not Found',
                    userMessage: this.get404Message(context.operation),
                    canRetry: false,
                    severity: 'low'
                }

            case 429:
                return {
                    type: 'ratelimit',
                    code: 429,
                    message: 'Too Many Requests',
                    userMessage: 'üö¶ –°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤. –ü–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–µ–π –ø–æ–ø—ã—Ç–∫–æ–π.',
                    canRetry: true,
                    retryAfter: 60, // –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –∂–¥–µ–º 1 –º–∏–Ω—É—Ç—É
                    severity: 'medium'
                }

            case 500:
            case 502:
            case 503:
            case 504:
                return {
                    type: 'server',
                    code: status,
                    message: 'Server Error',
                    userMessage: 'üõ†Ô∏è –°–µ—Ä–≤–µ—Ä –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.',
                    canRetry: true,
                    severity: 'high'
                }

            default:
                return {
                    type: 'unknown',
                    code: status,
                    message: `HTTP ${status}`,
                    userMessage: `‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ (–∫–æ–¥: ${status}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.`,
                    canRetry: false,
                    severity: 'medium'
                }
        }
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
    private isCancelledRequest(error: unknown): boolean {
        const axiosError = error as AxiosError
        return axiosError?.code === 'ERR_CANCELED' ||
            axiosError?.name === 'CanceledError' ||
            axiosError?.name === 'AbortError'
    }

    //–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π 404 –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –æ–ø–µ—Ä–∞—Ü–∏–∏
    private get404Message(operation: string): string {
        switch (operation) {
            case 'search-cities':
                return 'üîç –ì–æ—Ä–æ–¥–∞ —Å —Ç–∞–∫–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ.'
            case 'get-weather':
                return 'üå§Ô∏è –î–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –¥–ª—è —ç—Ç–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.'
            case 'get-forecast':
                return 'üìÖ –ü—Ä–æ–≥–Ω–æ–∑ –¥–ª—è —ç—Ç–æ–≥–æ –≥–æ—Ä–æ–¥–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω.'
            default:
                return '‚ùì –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.'
        }
    }

    //–≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ–± –æ—à–∏–±–∫–∞—Ö
    private getGenericErrorMessage(operation: string): string {
        switch (operation) {
            case 'search-cities':
                return 'üòî –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≥–æ—Ä–æ–¥–∞. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
            case 'get-weather':
                return 'üå°Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É.'
            case 'get-forecast':
                return 'üìä –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –ø–æ–≥–æ–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.'
            default:
                return '‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ–ø–µ—Ä–∞—Ü–∏—é.'
        }
    }

    //–ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫ –¥–ª—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
    private logError(errorDetails: ErrorDetails, context: ErrorContext): void {
        const logEntry = {
            ...errorDetails,
            ...context,
            timestamp: Date.now()
        }

        // –î–æ–±–∞–≤–ª—è–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω—ã–π –ª–æ–≥
        this.errorLog.push(logEntry)

        // –û–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º —Ä–∞–∑–º–µ—Ä –ª–æ–≥–∞
        if (this.errorLog.length > 100) {
            this.errorLog = this.errorLog.slice(-50)
        }

        // –í production –º–æ–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∞–Ω–∞–ª–∏—Ç–∏–∫–∏
        if (errorDetails.severity === 'critical' || errorDetails.severity === 'high') {
            console.error('Critical error:', logEntry)
        } else if (import.meta.env.DEV) {
            console.warn('Error handled:', logEntry)
        }
    }

    //–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
    private processError(errorDetails: ErrorDetails, context: ErrorContext): void {
        // –û–±—Ä–∞–±–æ—Ç–∫–∞ rate limit - –º–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å countdown
        if (errorDetails.type === 'ratelimit' && errorDetails.retryAfter) {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–∞–π–º–µ—Ä–∞ –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á–µ—Ç–∞
        }

        // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –æ—à–∏–±–æ–∫ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
        if (errorDetails.type === 'auth' && errorDetails.severity === 'high') {
            // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞—Å—Ç—Ä–æ–µ–∫ API –∫–ª—é—á–∞
        }

        // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫
        if (this.isFrequentError(context.operation, errorDetails.type)) {
            console.warn(`Frequent ${errorDetails.type} errors in ${context.operation}`)
        }
    }

    //–ø—Ä–æ–≤–µ—Ä–∫–∞ —á–∞—Å—Ç—ã—Ö –æ—à–∏–±–æ–∫ –æ–¥–Ω–æ–≥–æ —Ç–∏–ø–∞
    private isFrequentError(operation: string, errorType: string): boolean {
        const recentErrors = this.errorLog
            .filter(log => log.operation === operation && log.type === errorType)
            .filter(log => Date.now() - log.timestamp < 5 * 60 * 1000) // –ó–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5 –º–∏–Ω—É—Ç

        return recentErrors.length >= 3
    }

    //–ø–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—à–∏–±–æ–∫
    getErrorStats(): { byType: Record<string, number>; byOperation: Record<string, number> } {
        const byType: Record<string, number> = {}
        const byOperation: Record<string, number> = {}

        this.errorLog.forEach(log => {
            byType[log.type] = (byType[log.type] || 0) + 1
            byOperation[log.operation] = (byOperation[log.operation] || 0) + 1
        })

        return { byType, byOperation }
    }

    //–æ—á–∏—Å—Ç–∫–∞ –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫
    clearErrorLog(): void {
        this.errorLog = []
    }

    //–ø—Ä–æ—Å—Ç–æ–π –º–µ—Ç–æ–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    getErrorMessage(error: unknown, operation: string): string {
        const errorDetails = this.handle(error, {
            operation,
            timestamp: Date.now()
        })

        return errorDetails.userMessage
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º singleton
export const errorHandler = ErrorHandler.getInstance()

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
export function handleError(error: unknown, operation: string, params?: any): ErrorDetails {
    return errorHandler.handle(error, {
        operation,
        params,
        timestamp: Date.now()
    })
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–ª—å–∫–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
export function getErrorMessage(error: unknown, operation: string): string {
    return errorHandler.getErrorMessage(error, operation)
}
